name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: django_db
          MYSQL_USER: django_db_user
          MYSQL_PASSWORD: django_db_password
          MYSQL_ROOT_PASSWORD: django_db_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create Google Cloud credentials file
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > $HOME/gcloud.json
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    - name: Debugging- Check if credentials file is created correctly
      run: |
        echo "Checking credentials file content"
        cat $HOME/gcloud.json || echo "Credentials file not found"
      continue-on-error: true  # This allows the job to proceed even if there's an error

    - name: Set environment variable for Google Cloud credentials
      run: |
        echo "Setting GOOGLE_APPLICATION_CREDENTIALS environment variable"
        echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json" >> $GITHUB_ENV

    - name: Debugging- Check environment variable GOOGLE_APPLICATION_CREDENTIALS
      run: |
        echo "GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS"
        if [ -f "$GOOGLE_APPLICATION_CREDENTIALS" ]; then
          echo "File exists"
        else
          echo "File does not exist"
        fi
      continue-on-error: true  # This allows the job to proceed even if there's an error

    - name: Install MySQL client and Run Tests
      env:
        DATABASE_URL: mysql://django_db_user:django_db_password@localhost:3306/django_db
        GOOGLE_APPLICATION_CREDENTIALS: $HOME/gcloud.json  # Ensure the env var is passed
      run: |
        sudo apt-get install -y default-mysql-client
        echo "Using GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS"
        python manage.py migrate
        python manage.py test
