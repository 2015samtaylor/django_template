name: Django CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_DATABASE: django_db
          MYSQL_USER: django_db_user
          MYSQL_PASSWORD: django_db_password
          MYSQL_ROOT_PASSWORD: django_db_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Set up Google Cloud authentication securely
    - name: Set up Google Cloud authentication
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > gcloud-service-key.json
        gcloud auth activate-service-account --key-file=gcloud-service-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        # Remove service account key file for security after use
        rm gcloud-service-key.json

    # Step 5: Fetch database credentials and secret key from GCP Secrets Manager
    - name: Fetch GCP Secrets
      run: |
        export DB_USER=$(gcloud secrets versions access latest --secret="django_db_user")
        export DB_PASSWORD=$(gcloud secrets versions access latest --secret="django_db_password")
        export SECRET_KEY=$(gcloud secrets versions access latest --secret="django_secret_key")

    # Step 6: Run Tests with the database and secret key environment variables
    - name: Run Tests
      env:
        DATABASE_URL: mysql://$DB_USER:$DB_PASSWORD@localhost:3306/django_db
        DJANGO_SECRET_KEY: $SECRET_KEY
      run: |
        echo "Using GOOGLE_APPLICATION_CREDENTIALS: $GOOGLE_APPLICATION_CREDENTIALS"
        python manage.py migrate
        python manage.py test
